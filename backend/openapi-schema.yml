openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/me/:
    get:
      operationId: meUser
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/profiles/:
    get:
      operationId: listProfiles
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
    post:
      operationId: createProfile
      description: API endpoint that allows groups to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
  /api/profiles/{id}/:
    get:
      operationId: retrieveProfile
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
    put:
      operationId: updateProfile
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProfile
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProfile
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/groups/:
    get:
      operationId: listGroups
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
    post:
      operationId: createGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
  /api/groups/{id}/:
    get:
      operationId: retrieveGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
    put:
      operationId: updateGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/books/:
    get:
      operationId: listBooks
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    post:
      operationId: createBook
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
  /api/books/{id}/:
    get:
      operationId: retrieveBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    put:
      operationId: updateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: author
        required: false
        in: query
        description: author
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/greenhouses/:
    get:
      operationId: listGreenhouses
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
    post:
      operationId: createGreenhouse
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Greenhouse'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/:
    get:
      operationId: retrieveGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
    put:
      operationId: updateGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Greenhouse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Greenhouse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/flowerbeds/:
    get:
      operationId: listFlowerbeds
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
    post:
      operationId: createFlowerbed
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flowerbed'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/:
    get:
      operationId: retrieveFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
    put:
      operationId: updateFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flowerbed'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flowerbed'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/status/:
    get:
      operationId: statusFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowerbedStatus'
          description: ''
      tags:
      - api
  /api/orders/:
    get:
      operationId: listOrders
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    post:
      operationId: createOrder
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
  /api/orders/{id}/:
    get:
      operationId: retrieveOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/orders/{id}/get_payment/:
    get:
      operationId: getPaymentOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
      tags:
      - api
  /api/auth/profile:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/marketplace/products/:
    get:
      operationId: listProducts
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    post:
      operationId: createProduct
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
  /api/marketplace/products/{id}/:
    get:
      operationId: retrieveProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    put:
      operationId: updateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/marketplace/products/{id}/listings/:
    get:
      operationId: listingsProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailMarketplaceProduct'
          description: ''
      tags:
      - api
  /api/marketplace/shared-products/:
    get:
      operationId: listSharedProducts
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
    post:
      operationId: createSharedProduct
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedProduct'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
  /api/marketplace/shared-products/{id}/:
    get:
      operationId: retrieveSharedProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this shared product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
    put:
      operationId: updateSharedProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this shared product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedProduct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSharedProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this shared product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedProduct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySharedProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this shared product.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/marketplace/greenhouses/{id}/products/:
    get:
      operationId: listMarketplaceProducts
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/MarketplaceProduct'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/rent/:
    post:
      operationId: rentFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateRent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateRent'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRent'
          description: ''
      tags:
      - api
  /api/auth/login:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auth/register:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auth/logout:
    post:
      operationId: createLogout
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/marketplace/greenhouses/{id}/products/from-shared/:
    post:
      operationId: createMarketplaceProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGreenhouseProductFromSharedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGreenhouseProductFromSharedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGreenhouseProductFromSharedProduct'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGreenhouseProductFromSharedProduct'
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/edit_greenhouse/:
    put:
      operationId: editGreenhouseGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditGreenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditGreenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditGreenhouse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditGreenhouse'
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: string
          readOnly: true
        profile:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            user:
              type: integer
          required:
          - user
          readOnly: true
      required:
      - username
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
      required:
      - user
    Group:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 150
      required:
      - name
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        author:
          type: string
          maxLength: 255
        profile:
          type: integer
          nullable: true
      required:
      - title
      - author
    Greenhouse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        greenhouse_address:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            country:
              type: string
              nullable: true
            state:
              type: string
              nullable: true
            city:
              type: string
              nullable: true
            city_part:
              type: string
              nullable: true
            street:
              type: string
              nullable: true
            zipcode:
              type: string
              nullable: true
            latitude:
              type: string
              nullable: true
            longitude:
              type: string
              nullable: true
        flowerbeds:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              rents:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    rented_from:
                      type: string
                      format: date-time
                      nullable: true
                    rented_to:
                      type: string
                      format: date-time
                      nullable: true
                    flowerbed:
                      type: integer
                      nullable: true
                    user:
                      type: integer
                      nullable: true
                readOnly: true
              currentRent:
                type: string
                readOnly: true
              greenhouse:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  title:
                    type: string
                    nullable: true
                  description:
                    type: string
                    nullable: true
                  greenhouse_address:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      country:
                        type: string
                        nullable: true
                      state:
                        type: string
                        nullable: true
                      city:
                        type: string
                        nullable: true
                      city_part:
                        type: string
                        nullable: true
                      street:
                        type: string
                        nullable: true
                      zipcode:
                        type: string
                        nullable: true
                      latitude:
                        type: string
                        nullable: true
                      longitude:
                        type: string
                        nullable: true
                required:
                - greenhouse_address
              name:
                type: string
                nullable: true
              disabled:
                type: boolean
                nullable: true
              dimension_width:
                type: number
              dimension_height:
                type: number
              idealPlants:
                type: string
                nullable: true
                maxLength: 100
              tools:
                type: string
                nullable: true
                maxLength: 100
              pricePerDay:
                type: string
                format: decimal
                multipleOf: 1.0e-05
                maximum: 100000
                minimum: -100000
            required:
            - greenhouse
          readOnly: true
        greenhouse_business_hours:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              greenhouse_business_hour_periods:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    open:
                      type: string
                    close:
                      type: string
                    business_hour:
                      type: integer
                      nullable: true
                  required:
                  - open
                  - close
              day:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
              greenhouse:
                type: integer
                nullable: true
            required:
            - greenhouse_business_hour_periods
            - day
        available_flowerbeds:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        rules:
          type: string
          nullable: true
        published:
          type: boolean
        bank_account_number:
          type: string
          nullable: true
        owner:
          type: integer
        caretaker:
          type: integer
          nullable: true
      required:
      - greenhouse_address
      - greenhouse_business_hours
      - owner
    Flowerbed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rents:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              rented_from:
                type: string
                format: date-time
                nullable: true
              rented_to:
                type: string
                format: date-time
                nullable: true
              flowerbed:
                type: integer
                nullable: true
              user:
                type: integer
                nullable: true
          readOnly: true
        currentRent:
          type: string
          readOnly: true
        greenhouse:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            title:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            greenhouse_address:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                country:
                  type: string
                  nullable: true
                state:
                  type: string
                  nullable: true
                city:
                  type: string
                  nullable: true
                city_part:
                  type: string
                  nullable: true
                street:
                  type: string
                  nullable: true
                zipcode:
                  type: string
                  nullable: true
                latitude:
                  type: string
                  nullable: true
                longitude:
                  type: string
                  nullable: true
          required:
          - greenhouse_address
        name:
          type: string
          nullable: true
        disabled:
          type: boolean
          nullable: true
        dimension_width:
          type: number
        dimension_height:
          type: number
        idealPlants:
          type: string
          nullable: true
          maxLength: 100
        tools:
          type: string
          nullable: true
          maxLength: 100
        pricePerDay:
          type: string
          format: decimal
          multipleOf: 1.0e-05
          maximum: 100000
          minimum: -100000
      required:
      - greenhouse
    FlowerbedStatus:
      type: object
      properties:
        status:
          enum:
          - rented
          - free
          type: string
      required:
      - status
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        final_price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          nullable: true
        user:
          type: integer
          nullable: true
        discounts:
          type: array
          items:
            type: integer
    Payment:
      type: object
      properties:
        receiver:
          type: string
        vs:
          type: integer
        amount:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
      required:
      - receiver
      - vs
      - amount
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        shared:
          type: boolean
    ProductDetailMarketplaceProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        greenhouse:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            title:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            rules:
              type: string
              nullable: true
            published:
              type: boolean
            bank_account_number:
              type: string
              nullable: true
            owner:
              type: integer
            greenhouse_address:
              type: integer
              nullable: true
            caretaker:
              type: integer
              nullable: true
          required:
          - owner
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        product:
          type: integer
          nullable: true
      required:
      - greenhouse
      - price
      - quantity
    SharedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        shared:
          type: boolean
          readOnly: true
    MarketplaceProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 255
            description:
              type: string
              nullable: true
            image:
              type: string
              nullable: true
            shared:
              type: boolean
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        greenhouse:
          type: integer
          nullable: true
      required:
      - product
      - price
      - quantity
    CreateRent:
      type: object
      properties:
        rented_from:
          type: string
          format: date-time
          nullable: true
        rented_to:
          type: string
          format: date-time
          nullable: true
      required:
      - rented_from
      - rented_to
    CreateGreenhouseProductFromSharedProduct:
      type: object
      properties:
        product:
          type: integer
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - product
      - price
      - quantity
    EditGreenhouse:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        published:
          type: boolean
        greenhouse_address:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            country:
              type: string
              nullable: true
            state:
              type: string
              nullable: true
            city:
              type: string
              nullable: true
            city_part:
              type: string
              nullable: true
            street:
              type: string
              nullable: true
            zipcode:
              type: string
              nullable: true
            latitude:
              type: string
              nullable: true
            longitude:
              type: string
              nullable: true
        greenhouse_business_hours:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              greenhouse_business_hour_periods:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    open:
                      type: string
                    close:
                      type: string
                    business_hour:
                      type: integer
                      nullable: true
                  required:
                  - open
                  - close
              day:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
              greenhouse:
                type: integer
                nullable: true
            required:
            - greenhouse_business_hour_periods
            - day
      required:
      - title
      - description
      - published
