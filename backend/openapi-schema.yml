openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/greenhouses/:
    get:
      operationId: listGreenhouses
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
    post:
      operationId: createGreenhouse
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Greenhouse'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
  /api/greenhouses/my_greenhouses/:
    get:
      operationId: myGreenhousesGreenhouse
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/:
    get:
      operationId: retrieveGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
    put:
      operationId: updateGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Greenhouse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Greenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Greenhouse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greenhouse'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/get_statistics/:
    get:
      operationId: getStatisticsGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/get_timesheets/:
    get:
      operationId: getTimesheetsGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timesheet'
          description: ''
      tags:
      - api
  /api/flowerbeds/:
    get:
      operationId: listFlowerbeds
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
    post:
      operationId: createFlowerbed
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flowerbed'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
  /api/flowerbeds/my_flowerbeds/:
    get:
      operationId: myFlowerbedsFlowerbed
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/:
    get:
      operationId: retrieveFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
    put:
      operationId: updateFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flowerbed'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flowerbed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flowerbed'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flowerbed'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/get_current_details/:
    get:
      operationId: getCurrentDetailsFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFlowerbed'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/get_stats/:
    get:
      operationId: getStatsFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFlowerbedStats'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/status/:
    get:
      operationId: statusFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowerbedStatus'
          description: ''
      tags:
      - api
  /api/orders/:
    get:
      operationId: listOrders
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    post:
      operationId: createOrder
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
  /api/orders/{id}/:
    get:
      operationId: retrieveOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/orders/{id}/get_payment/:
    get:
      operationId: getPaymentOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
      tags:
      - api
  /api/orders/{id}/get_pickup/:
    get:
      operationId: getPickupOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPickupLocations'
          description: ''
      tags:
      - api
  /api/users/:
    get:
      operationId: listUsers
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetailed'
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailed'
          description: ''
      tags:
      - api
  /api/timesheets/:
    get:
      operationId: listTimesheets
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimesheetWithGreenhouse'
          description: ''
      tags:
      - api
    post:
      operationId: createTimesheet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetWithGreenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimesheetWithGreenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimesheetWithGreenhouse'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetWithGreenhouse'
          description: ''
      tags:
      - api
  /api/timesheets/{id}/:
    get:
      operationId: retrieveTimesheet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this timesheet.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetWithGreenhouse'
          description: ''
      tags:
      - api
    put:
      operationId: updateTimesheet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this timesheet.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetWithGreenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimesheetWithGreenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimesheetWithGreenhouse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetWithGreenhouse'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTimesheet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this timesheet.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetWithGreenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimesheetWithGreenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimesheetWithGreenhouse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetWithGreenhouse'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTimesheet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this timesheet.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/socialposts/:
    get:
      operationId: listSocialPosts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialPost'
          description: ''
      tags:
      - api
    post:
      operationId: createSocialPost
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSocialPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateSocialPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSocialPost'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSocialPost'
          description: ''
      tags:
      - api
  /api/socialposts/all_posts/:
    get:
      operationId: allPostsSocialPost
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPostApp'
          description: ''
      tags:
      - api
  /api/socialposts/my_posts/:
    get:
      operationId: myPostsSocialPost
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPostApp'
          description: ''
      tags:
      - api
  /api/socialposts/{id}/:
    get:
      operationId: retrieveSocialPost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this social post.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPost'
          description: ''
      tags:
      - api
    put:
      operationId: updateSocialPost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this social post.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialPost'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPost'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSocialPost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this social post.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialPost'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPost'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySocialPost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this social post.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/badges/:
    get:
      operationId: listBadges
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Badge'
          description: ''
      tags:
      - api
    post:
      operationId: createBadge
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Badge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Badge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Badge'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badge'
          description: ''
      tags:
      - api
  /api/badges/{id}/:
    get:
      operationId: retrieveBadge
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this badge.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badge'
          description: ''
      tags:
      - api
    put:
      operationId: updateBadge
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this badge.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Badge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Badge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Badge'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badge'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBadge
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this badge.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Badge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Badge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Badge'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badge'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBadge
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this badge.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/profile:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/marketplace/products/:
    get:
      operationId: listProducts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    post:
      operationId: createProduct
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
  /api/marketplace/products/{id}/:
    get:
      operationId: retrieveProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    put:
      operationId: updateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/marketplace/products/{id}/listings/:
    get:
      operationId: listingsProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailMarketplaceProduct'
          description: ''
      tags:
      - api
  /api/marketplace/products/{id}/minmax/:
    get:
      operationId: minmaxProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMinMax'
          description: ''
      tags:
      - api
  /api/marketplace/shared-products/:
    get:
      operationId: listSharedProducts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
    post:
      operationId: createSharedProduct
      description: ''
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedProduct'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
  /api/marketplace/shared-products/{id}/:
    get:
      operationId: retrieveSharedProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this shared product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
    put:
      operationId: updateSharedProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this shared product.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedProduct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSharedProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this shared product.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SharedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SharedProduct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedProduct'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySharedProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this shared product.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/marketplace/greenhouses/{id}/products/:
    get:
      operationId: listMarketplaceProducts
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MarketplaceProduct'
          description: ''
      tags:
      - api
  /api/marketplace/product/{id}/:
    get:
      operationId: retrieveMarketplaceProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceDetailProduct'
          description: ''
      tags:
      - api
  /api/newsletter/gallery/:
    get:
      operationId: listNewsletterImages
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewsletterImage'
          description: ''
      tags:
      - api
    post:
      operationId: createNewsletterImage
      description: ''
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsletterImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsletterImage'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsletterImage'
          description: ''
      tags:
      - api
  /api/newsletter/gallery/{id}/:
    get:
      operationId: retrieveNewsletterImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this newsletter image.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsletterImage'
          description: ''
      tags:
      - api
    put:
      operationId: updateNewsletterImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this newsletter image.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsletterImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsletterImage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsletterImage'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateNewsletterImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this newsletter image.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsletterImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsletterImage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsletterImage'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyNewsletterImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this newsletter image.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/newsletter/unsubscribe/:
    get:
      operationId: listUnsubscribes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/newsletter/subscriber-count/:
    get:
      operationId: listSubscriberCounts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/newsletter/history/:
    get:
      operationId: listNewsletterPosts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewsletterPost'
          description: ''
      tags:
      - api
  /api/activate/:
    get:
      operationId: listActivateUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/user-stats/:
    get:
      operationId: listUserStats
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/badge-rarity/:
    get:
      operationId: listBadgeStats
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/greenhouses/create_greenhouse/:
    post:
      operationId: createGreenhouseGreenhouse
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGreenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGreenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGreenhouse'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGreenhouse'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/get_savings/:
    post:
      operationId: getSavingsFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowerbedSavings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlowerbedSavings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlowerbedSavings'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowerbedSavings'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/rent/:
    post:
      operationId: rentFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateRent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateRent'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRent'
          description: ''
      tags:
      - api
  /api/users/{id}/edit/:
    post:
      operationId: editUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditUser'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditUser'
          description: ''
      tags:
      - api
  /api/users/{id}/set_activity/:
    post:
      operationId: setActivityUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUserActivity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUserActivity'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUserActivity'
          description: ''
      tags:
      - api
  /api/timesheets/create_timesheet/:
    post:
      operationId: createTimesheetTimesheet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimesheet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateTimesheet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateTimesheet'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTimesheet'
          description: ''
      tags:
      - api
  /api/password-reset/validate_token/:
    post:
      operationId: createResetToken
      description: An Api ViewSet which provides a method to verify that a token is
        valid
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
      tags:
      - api
  /api/password-reset/confirm/:
    post:
      operationId: createPasswordToken
      description: An Api ViewSet which provides a method to reset a password based
        on a unique token
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
      tags:
      - api
  /api/password-reset/:
    post:
      operationId: createEmail
      description: 'An Api ViewSet which provides a method to request a password reset
        token based on an e-mail address


        Sends a signal reset_password_token_created when a reset token was created'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
      tags:
      - api
  /api/auth/login:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auth/register:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auth/logout:
    post:
      operationId: createLogout
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/password_reset/validate_token/:
    post:
      operationId: createResetToken
      description: An Api View which provides a method to verify that a token is valid
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
      tags:
      - api
  /api/password_reset/confirm/:
    post:
      operationId: createPasswordToken
      description: An Api View which provides a method to reset a password based on
        a unique token
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
      tags:
      - api
  /api/password_reset/:
    post:
      operationId: createEmail
      description: 'An Api View which provides a method to request a password reset
        token based on an e-mail address


        Sends a signal reset_password_token_created when a reset token was created'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
      tags:
      - api
  /api/marketplace/greenhouses/{id}/products/from-shared/:
    post:
      operationId: createMarketplaceProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGreenhouseProductFromSharedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGreenhouseProductFromSharedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGreenhouseProductFromSharedProduct'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGreenhouseProductFromSharedProduct'
          description: ''
      tags:
      - api
  /api/marketplace/greenhouses/{id}/products/from-custom/:
    post:
      operationId: createMarketplaceProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGreenhouseProductFromCustomProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGreenhouseProductFromCustomProduct'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGreenhouseProductFromCustomProduct'
          description: ''
      tags:
      - api
  /api/marketplace/order/:
    post:
      operationId: createProductOrders
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductOrderInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateProductOrderInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateProductOrderInput'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductOrderInput'
          description: ''
      tags:
      - api
  /api/marketplace/pickup-options/:
    post:
      operationId: createGetPickupOptionsFromCartItems
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/marketplace/set-primary-greenhouse/:
    post:
      operationId: createSetPrimaryGreenhouse
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/newsletter/send-newsletter/:
    post:
      operationId: createSendNewsletter
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/register/:
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserWithEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterUserWithEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterUserWithEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserWithEmail'
          description: ''
      tags:
      - api
  /api/discount-code-availability/:
    post:
      operationId: createDiscountCodeAvailability
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/edit_greenhouse/:
    put:
      operationId: editGreenhouseGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditGreenhouse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditGreenhouse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditGreenhouse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditGreenhouse'
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/set_caretaker/:
    put:
      operationId: setCaretakerGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCaretaker'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetCaretaker'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetCaretaker'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetCaretaker'
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/set_owner/:
    put:
      operationId: setOwnerGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOwner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetOwner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetOwner'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetOwner'
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/unset_caretaker/:
    put:
      operationId: unsetCaretakerGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Empty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Empty'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: ''
      tags:
      - api
  /api/greenhouses/{id}/unset_owner/:
    put:
      operationId: unsetOwnerGreenhouse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this greenhouse.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Empty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Empty'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/extend_rent/:
    put:
      operationId: extendRentFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateRent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateRent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRent'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/set_harvests/:
    put:
      operationId: setHarvestsFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditFlowerbedHarvest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditFlowerbedHarvest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditFlowerbedHarvest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditFlowerbedHarvest'
          description: ''
      tags:
      - api
  /api/flowerbeds/{id}/set_notes/:
    put:
      operationId: setNotesFlowerbed
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this flowerbed.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditFlowerbedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditFlowerbedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditFlowerbedNote'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditFlowerbedNote'
          description: ''
      tags:
      - api
  /api/orders/{id}/cancel_order/:
    put:
      operationId: cancelOrderOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Empty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Empty'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: ''
      tags:
      - api
  /api/orders/{id}/edit_order/:
    put:
      operationId: editOrderOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditOrder'
          description: ''
      tags:
      - api
  /api/timesheets/{id}/update_timesheet/:
    put:
      operationId: updateTimesheetTimesheet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this timesheet.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimesheet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateTimesheet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateTimesheet'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTimesheet'
          description: ''
      tags:
      - api
  /api/socialposts/{id}/edit/:
    put:
      operationId: editSocialPost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this social post.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditSocialPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditSocialPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditSocialPost'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditSocialPost'
          description: ''
      tags:
      - api
  /api/marketplace/marketplace-products/{id}/:
    put:
      operationId: updateMarketplaceProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMarketplaceProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditMarketplaceProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditMarketplaceProduct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditMarketplaceProduct'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMarketplaceProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMarketplaceProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditMarketplaceProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditMarketplaceProduct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditMarketplaceProduct'
          description: ''
      tags:
      - api
  /api/marketplace/greenhouses/{id}/products/edit/:
    put:
      operationId: updateEditGreenhouseProductInventory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/edit-self/:
    put:
      operationId: updateEditSelfUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditSelfUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditSelfUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditSelfUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditSelfUser'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEditSelfUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditSelfUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditSelfUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditSelfUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditSelfUser'
          description: ''
      tags:
      - api
  /api/greenhouse-upload/:
    put:
      operationId: updateGreenhouseUploadImage
      description: ''
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/marketplace/marketplace-products/{id}/delete/:
    delete:
      operationId: destroyMarketplaceProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/marketplace/marketplace-products/{id}/delete-image/:
    delete:
      operationId: destroyMarketplaceProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this marketplace product.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    Greenhouse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        greenhouse_address:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            country:
              type: string
              nullable: true
            state:
              type: string
              nullable: true
            city:
              type: string
              nullable: true
            city_part:
              type: string
              nullable: true
            street:
              type: string
              nullable: true
            zipcode:
              type: string
              nullable: true
            latitude:
              type: string
              nullable: true
            longitude:
              type: string
              nullable: true
        flowerbeds:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              rents:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    rented_from:
                      type: string
                      format: date-time
                      nullable: true
                    rented_to:
                      type: string
                      format: date-time
                      nullable: true
                    flowerbed:
                      type: integer
                      nullable: true
                    user:
                      type: integer
                      nullable: true
                readOnly: true
              currentRent:
                type: string
                readOnly: true
              greenhouse:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  title:
                    type: string
                    nullable: true
                  description:
                    type: string
                    nullable: true
                  greenhouse_address:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      country:
                        type: string
                        nullable: true
                      state:
                        type: string
                        nullable: true
                      city:
                        type: string
                        nullable: true
                      city_part:
                        type: string
                        nullable: true
                      street:
                        type: string
                        nullable: true
                      zipcode:
                        type: string
                        nullable: true
                      latitude:
                        type: string
                        nullable: true
                      longitude:
                        type: string
                        nullable: true
                  image:
                    type: string
                    format: binary
                required:
                - greenhouse_address
              extendable:
                type: string
                readOnly: true
              name:
                type: string
                nullable: true
              disabled:
                type: boolean
                nullable: true
              dimension_width:
                type: number
              dimension_height:
                type: number
              idealPlants:
                type: string
                nullable: true
                maxLength: 100
              tools:
                type: string
                nullable: true
                maxLength: 100
              pricePerDay:
                type: string
                format: decimal
                multipleOf: 1.0e-05
                maximum: 100000
                minimum: -100000
            required:
            - greenhouse
          readOnly: true
        greenhouse_business_hours:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              greenhouse_business_hour_periods:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    open:
                      type: string
                    close:
                      type: string
                    business_hour:
                      type: integer
                      nullable: true
                  required:
                  - open
                  - close
              day:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
              greenhouse:
                type: integer
                nullable: true
            required:
            - greenhouse_business_hour_periods
            - day
        available_flowerbeds:
          type: string
          readOnly: true
        image:
          type: string
          format: binary
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        rules:
          type: string
          nullable: true
        published:
          type: boolean
        bank_account_number:
          type: string
          nullable: true
        image_width:
          type: integer
          maximum: 2147483647
          minimum: 0
        image_height:
          type: integer
          maximum: 2147483647
          minimum: 0
        owner:
          type: integer
          nullable: true
        caretaker:
          type: integer
          nullable: true
      required:
      - greenhouse_address
      - greenhouse_business_hours
    Empty:
      type: object
      properties: {}
    Timesheet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              title:
                type: string
                nullable: true
              description:
                type: string
                nullable: true
              timesheet:
                type: integer
                nullable: true
              timesheet_update:
                type: integer
                nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        pay:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          nullable: true
        status:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        greenhouse:
          type: integer
          nullable: true
        author:
          type: integer
          nullable: true
      required:
      - items
    Flowerbed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rents:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              rented_from:
                type: string
                format: date-time
                nullable: true
              rented_to:
                type: string
                format: date-time
                nullable: true
              flowerbed:
                type: integer
                nullable: true
              user:
                type: integer
                nullable: true
          readOnly: true
        currentRent:
          type: string
          readOnly: true
        greenhouse:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            title:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            greenhouse_address:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                country:
                  type: string
                  nullable: true
                state:
                  type: string
                  nullable: true
                city:
                  type: string
                  nullable: true
                city_part:
                  type: string
                  nullable: true
                street:
                  type: string
                  nullable: true
                zipcode:
                  type: string
                  nullable: true
                latitude:
                  type: string
                  nullable: true
                longitude:
                  type: string
                  nullable: true
            image:
              type: string
              format: binary
          required:
          - greenhouse_address
        extendable:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
        disabled:
          type: boolean
          nullable: true
        dimension_width:
          type: number
        dimension_height:
          type: number
        idealPlants:
          type: string
          nullable: true
          maxLength: 100
        tools:
          type: string
          nullable: true
          maxLength: 100
        pricePerDay:
          type: string
          format: decimal
          multipleOf: 1.0e-05
          maximum: 100000
          minimum: -100000
      required:
      - greenhouse
    UserFlowerbed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            user:
              type: string
              readOnly: true
          readOnly: true
        harvests:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                nullable: true
              quantity:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
              date:
                type: string
                format: date-time
                nullable: true
              user_flowerbed:
                type: integer
                nullable: true
          readOnly: true
        notes:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              note:
                type: string
                nullable: true
              date:
                type: string
                format: date-time
                nullable: true
              user_flowerbed:
                type: integer
                nullable: true
          readOnly: true
        flowerbed:
          type: integer
          nullable: true
    UserFlowerbedStats:
      type: object
      properties:
        emission_sum:
          type: number
        emission_sentence:
          type: string
        savings_sum:
          type: number
      required:
      - emission_sum
      - emission_sentence
      - savings_sum
    FlowerbedStatus:
      type: object
      properties:
        status:
          enum:
          - rented
          - free
          type: string
      required:
      - status
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        final_price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          nullable: true
        user:
          type: integer
          nullable: true
        discount:
          type: integer
          nullable: true
    Payment:
      type: object
      properties:
        receiver:
          type: string
        receiver_iban:
          type: string
        vs:
          type: integer
        amount:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
      required:
      - receiver
      - receiver_iban
      - vs
      - amount
    GetPickupLocations:
      type: object
      properties:
        greenhouse:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            greenhouse_business_hours:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  greenhouse_business_hour_periods:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        open:
                          type: string
                        close:
                          type: string
                        business_hour:
                          type: integer
                          nullable: true
                      required:
                      - open
                      - close
                  day:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                  greenhouse:
                    type: integer
                    nullable: true
                required:
                - greenhouse_business_hour_periods
                - day
            greenhouse_address:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                country:
                  type: string
                  nullable: true
                state:
                  type: string
                  nullable: true
                city:
                  type: string
                  nullable: true
                city_part:
                  type: string
                  nullable: true
                street:
                  type: string
                  nullable: true
                zipcode:
                  type: string
                  nullable: true
                latitude:
                  type: string
                  nullable: true
                longitude:
                  type: string
                  nullable: true
            title:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            rules:
              type: string
              nullable: true
            published:
              type: boolean
            bank_account_number:
              type: string
              nullable: true
            image:
              type: string
              format: binary
              nullable: true
            image_width:
              type: integer
              maximum: 2147483647
              minimum: 0
            image_height:
              type: integer
              maximum: 2147483647
              minimum: 0
            owner:
              type: integer
              nullable: true
            caretaker:
              type: integer
              nullable: true
          required:
          - greenhouse_business_hours
          - greenhouse_address
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              productOrder:
                type: integer
              quantity:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
              price:
                type: string
                format: decimal
                multipleOf: 0.01
                maximum: 100000000
                minimum: -100000000
                nullable: true
              greenhouseName:
                type: string
                nullable: true
                maxLength: 255
              greenhouseId:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
              productName:
                type: string
                nullable: true
                maxLength: 255
              productImage:
                type: string
                nullable: true
                maxLength: 255
              productId:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
              marketplaceProductId:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
            required:
            - productOrder
      required:
      - greenhouse
      - items
    UserDetailed:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: string
          readOnly: true
        profile:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            primary_greenhouseId:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
              nullable: true
            receive_newsletter:
              type: boolean
            activated_once:
              type: boolean
            user:
              type: integer
          required:
          - user
          readOnly: true
        owned_greenhouses:
          type: string
          readOnly: true
        caretaker_greenhouses:
          type: string
          readOnly: true
        orders:
          type: string
          readOnly: true
        superuser:
          type: string
          readOnly: true
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - username
    TimesheetWithGreenhouse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              title:
                type: string
                nullable: true
              description:
                type: string
                nullable: true
              timesheet:
                type: integer
                nullable: true
              timesheet_update:
                type: integer
                nullable: true
        greenhouse:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            greenhouse_address:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                country:
                  type: string
                  nullable: true
                state:
                  type: string
                  nullable: true
                city:
                  type: string
                  nullable: true
                city_part:
                  type: string
                  nullable: true
                street:
                  type: string
                  nullable: true
                zipcode:
                  type: string
                  nullable: true
                latitude:
                  type: string
                  nullable: true
                longitude:
                  type: string
                  nullable: true
            flowerbeds:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  rents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        rented_from:
                          type: string
                          format: date-time
                          nullable: true
                        rented_to:
                          type: string
                          format: date-time
                          nullable: true
                        flowerbed:
                          type: integer
                          nullable: true
                        user:
                          type: integer
                          nullable: true
                    readOnly: true
                  currentRent:
                    type: string
                    readOnly: true
                  greenhouse:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      title:
                        type: string
                        nullable: true
                      description:
                        type: string
                        nullable: true
                      greenhouse_address:
                        type: object
                        properties:
                          id:
                            type: integer
                            readOnly: true
                          country:
                            type: string
                            nullable: true
                          state:
                            type: string
                            nullable: true
                          city:
                            type: string
                            nullable: true
                          city_part:
                            type: string
                            nullable: true
                          street:
                            type: string
                            nullable: true
                          zipcode:
                            type: string
                            nullable: true
                          latitude:
                            type: string
                            nullable: true
                          longitude:
                            type: string
                            nullable: true
                      image:
                        type: string
                        format: binary
                    required:
                    - greenhouse_address
                  extendable:
                    type: string
                    readOnly: true
                  name:
                    type: string
                    nullable: true
                  disabled:
                    type: boolean
                    nullable: true
                  dimension_width:
                    type: number
                  dimension_height:
                    type: number
                  idealPlants:
                    type: string
                    nullable: true
                    maxLength: 100
                  tools:
                    type: string
                    nullable: true
                    maxLength: 100
                  pricePerDay:
                    type: string
                    format: decimal
                    multipleOf: 1.0e-05
                    maximum: 100000
                    minimum: -100000
                required:
                - greenhouse
              readOnly: true
            greenhouse_business_hours:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  greenhouse_business_hour_periods:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        open:
                          type: string
                        close:
                          type: string
                        business_hour:
                          type: integer
                          nullable: true
                      required:
                      - open
                      - close
                  day:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                  greenhouse:
                    type: integer
                    nullable: true
                required:
                - greenhouse_business_hour_periods
                - day
            available_flowerbeds:
              type: string
              readOnly: true
            image:
              type: string
              format: binary
            title:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            rules:
              type: string
              nullable: true
            published:
              type: boolean
            bank_account_number:
              type: string
              nullable: true
            image_width:
              type: integer
              maximum: 2147483647
              minimum: 0
            image_height:
              type: integer
              maximum: 2147483647
              minimum: 0
            owner:
              type: integer
              nullable: true
            caretaker:
              type: integer
              nullable: true
          required:
          - greenhouse_address
          - greenhouse_business_hours
        working_hours:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              start:
                type: string
                format: date-time
                nullable: true
              end:
                type: string
                format: date-time
                nullable: true
              timesheet:
                type: integer
                nullable: true
              timesheet_update:
                type: integer
                nullable: true
        updates:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    title:
                      type: string
                      nullable: true
                    description:
                      type: string
                      nullable: true
                    timesheet:
                      type: integer
                      nullable: true
                    timesheet_update:
                      type: integer
                      nullable: true
              working_hours:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    start:
                      type: string
                      format: date-time
                      nullable: true
                    end:
                      type: string
                      format: date-time
                      nullable: true
                    timesheet:
                      type: integer
                      nullable: true
                    timesheet_update:
                      type: integer
                      nullable: true
              author:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  user:
                    type: string
                    readOnly: true
              message:
                type: string
                nullable: true
              description:
                type: string
                nullable: true
              pay:
                type: string
                format: decimal
                multipleOf: 0.01
                maximum: 100000000
                minimum: -100000000
                nullable: true
              status:
                type: string
                nullable: true
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
                readOnly: true
              timesheet:
                type: integer
                nullable: true
            required:
            - items
            - working_hours
            - author
        author:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            user:
              type: string
              readOnly: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        pay:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          nullable: true
        status:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - items
      - greenhouse
      - working_hours
      - updates
      - author
    SocialPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        post_type:
          type: string
        approved:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        author:
          type: integer
          nullable: true
      required:
      - url
      - post_type
    SocialPostApp:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            user:
              type: string
              readOnly: true
        url:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        post_type:
          type: string
        approved:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - author
      - url
      - post_type
    Badge:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        badge_type:
          type: string
          maxLength: 255
        badge_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        xp:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - name
      - description
      - badge_type
      - user
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: binary
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        shared:
          type: boolean
    ProductDetailMarketplaceProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        greenhouse:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            title:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            rules:
              type: string
              nullable: true
            published:
              type: boolean
            bank_account_number:
              type: string
              nullable: true
            image:
              type: string
              format: binary
              nullable: true
            image_width:
              type: integer
              maximum: 2147483647
              minimum: 0
            image_height:
              type: integer
              maximum: 2147483647
              minimum: 0
            owner:
              type: integer
              nullable: true
            greenhouse_address:
              type: integer
              nullable: true
            caretaker:
              type: integer
              nullable: true
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        product:
          type: integer
          nullable: true
      required:
      - greenhouse
      - price
      - quantity
    ProductMinMax:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        image:
          type: string
        min:
          type: integer
        max:
          type: integer
        totalQuantity:
          type: integer
        totalGreenhouses:
          type: integer
      required:
      - id
      - name
      - description
      - image
      - min
      - max
      - totalQuantity
      - totalGreenhouses
    SharedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        image:
          type: string
          format: binary
          nullable: true
        shared:
          type: boolean
          readOnly: true
    MarketplaceProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            image:
              type: string
              format: binary
            name:
              type: string
              maxLength: 255
            description:
              type: string
              nullable: true
            shared:
              type: boolean
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        greenhouse:
          type: integer
          nullable: true
      required:
      - product
      - price
      - quantity
    MarketplaceDetailProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            image:
              type: string
              format: binary
            name:
              type: string
              maxLength: 255
            description:
              type: string
              nullable: true
            shared:
              type: boolean
        greenhouse:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            title:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            rules:
              type: string
              nullable: true
            published:
              type: boolean
            bank_account_number:
              type: string
              nullable: true
            image:
              type: string
              format: binary
              nullable: true
            image_width:
              type: integer
              maximum: 2147483647
              minimum: 0
            image_height:
              type: integer
              maximum: 2147483647
              minimum: 0
            owner:
              type: integer
              nullable: true
            greenhouse_address:
              type: integer
              nullable: true
            caretaker:
              type: integer
              nullable: true
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - product
      - greenhouse
      - price
      - quantity
    NewsletterImage:
      type: object
      properties:
        image:
          type: string
          format: binary
        image_height:
          type: integer
          maximum: 2147483647
          minimum: 0
        image_width:
          type: integer
          maximum: 2147483647
          minimum: 0
    NewsletterPost:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        content:
          type: object
        created_at:
          type: string
          format: date-time
      required:
      - title
      - content
    CreateGreenhouse:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        published:
          type: boolean
        greenhouse_address:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            country:
              type: string
              nullable: true
            state:
              type: string
              nullable: true
            city:
              type: string
              nullable: true
            city_part:
              type: string
              nullable: true
            street:
              type: string
              nullable: true
            zipcode:
              type: string
              nullable: true
            latitude:
              type: string
              nullable: true
            longitude:
              type: string
              nullable: true
        greenhouse_business_hours:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              greenhouse_business_hour_periods:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    open:
                      type: string
                    close:
                      type: string
                    business_hour:
                      type: integer
                      nullable: true
                  required:
                  - open
                  - close
              day:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
              greenhouse:
                type: integer
                nullable: true
            required:
            - greenhouse_business_hour_periods
            - day
      required:
      - title
      - description
      - published
    FlowerbedSavings:
      type: object
      properties:
        harvests:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                nullable: true
              quantity:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
      required:
      - harvests
    CreateRent:
      type: object
      properties:
        rented_from:
          type: string
          format: date-time
          nullable: true
        rented_to:
          type: string
          format: date-time
          nullable: true
        discount_code:
          type: string
      required:
      - rented_from
      - rented_to
    EditUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - username
    SetUserActivity:
      type: object
      properties:
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    CreateTimesheet:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              title:
                type: string
                nullable: true
              description:
                type: string
                nullable: true
              timesheet:
                type: integer
                nullable: true
              timesheet_update:
                type: integer
                nullable: true
        greenhouse:
          type: integer
        working_hours:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              start:
                type: string
                format: date-time
                nullable: true
              end:
                type: string
                format: date-time
                nullable: true
              timesheet:
                type: integer
                nullable: true
              timesheet_update:
                type: integer
                nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        pay:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          nullable: true
        status:
          type: string
          nullable: true
      required:
      - items
      - greenhouse
      - working_hours
    CreateSocialPost:
      type: object
      properties:
        url:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        post_type:
          type: string
          default: ig
      required:
      - url
    ResetToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    CreateGreenhouseProductFromSharedProduct:
      type: object
      properties:
        product:
          type: integer
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - product
      - price
      - quantity
    CreateGreenhouseProductFromCustomProduct:
      type: object
      properties:
        product:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            image:
              type: string
              format: binary
            name:
              type: string
              maxLength: 255
            description:
              type: string
              nullable: true
            shared:
              type: boolean
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - product
      - price
      - quantity
    CreateProductOrderInput:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              marketplaceProduct:
                type: integer
              quantity:
                type: integer
            required:
            - marketplaceProduct
            - quantity
      required:
      - items
    RegisterUserWithEmail:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        subscribe_newsletter:
          type: boolean
      required:
      - username
      - email
      - password
      - first_name
      - last_name
      - subscribe_newsletter
    EditGreenhouse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        published:
          type: boolean
        greenhouse_address:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            country:
              type: string
              nullable: true
            state:
              type: string
              nullable: true
            city:
              type: string
              nullable: true
            city_part:
              type: string
              nullable: true
            street:
              type: string
              nullable: true
            zipcode:
              type: string
              nullable: true
            latitude:
              type: string
              nullable: true
            longitude:
              type: string
              nullable: true
        greenhouse_business_hours:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              greenhouse_business_hour_periods:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    open:
                      type: string
                    close:
                      type: string
                    business_hour:
                      type: integer
                      nullable: true
                  required:
                  - open
                  - close
              day:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
              greenhouse:
                type: integer
                nullable: true
            required:
            - greenhouse_business_hour_periods
            - day
      required:
      - title
      - description
      - published
    SetCaretaker:
      type: object
      properties:
        caretaker:
          type: integer
      required:
      - caretaker
    SetOwner:
      type: object
      properties:
        owner:
          type: integer
      required:
      - owner
    EditFlowerbedHarvest:
      type: object
      properties:
        harvests:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                nullable: true
              quantity:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
              date:
                type: string
                format: date-time
                nullable: true
              user_flowerbed:
                type: integer
                nullable: true
      required:
      - harvests
    EditFlowerbedNote:
      type: object
      properties:
        notes:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              note:
                type: string
                nullable: true
              date:
                type: string
                format: date-time
                nullable: true
              user_flowerbed:
                type: integer
                nullable: true
      required:
      - notes
    EditOrder:
      type: object
      properties:
        status:
          type: string
          nullable: true
        final_price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          nullable: true
    UpdateTimesheet:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              title:
                type: string
                nullable: true
              description:
                type: string
                nullable: true
              timesheet:
                type: integer
                nullable: true
              timesheet_update:
                type: integer
                nullable: true
        working_hours:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              start:
                type: string
                format: date-time
                nullable: true
              end:
                type: string
                format: date-time
                nullable: true
              timesheet:
                type: integer
                nullable: true
              timesheet_update:
                type: integer
                nullable: true
        message:
          type: string
          writeOnly: true
        description:
          type: string
          nullable: true
        pay:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          nullable: true
        status:
          type: string
          nullable: true
    EditSocialPost:
      type: object
      properties:
        url:
          type: string
          format: uri
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        approved:
          type: boolean
    EditMarketplaceProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            image:
              type: string
              format: binary
            name:
              type: string
              maxLength: 255
            description:
              type: string
              nullable: true
            shared:
              type: boolean
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        greenhouse:
          type: integer
          nullable: true
      required:
      - price
      - quantity
    EditSelfUser:
      type: object
      properties:
        profile:
          type: object
          properties:
            receive_newsletter:
              type: boolean
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
